name: CI

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    # run CI every day even if no PRs/merges occur
    - cron:  '0 12 * * *'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: deps
        run: sudo apt install clang-format-14

      - name: lint
        run: |
          clang-format-14 -style=file -i main.cpp
          # clang-format will auto correct files so prepare the diff and use this as artifact
          git diff > clang_format.patch

          # Delete if nothing otherwise exit 1 to indicate a failed job
          if [ ! -s clang_format.patch ]
          then
            rm clang_format.patch
            exit 0
          else
            echo "clang-format auto corrected files:"
            git diff --name-only
            echo -e "\nPlease correct these files. Patch is uploaded as an artifact for convenience."
            exit 1
          fi
          # git diff --exit-code

      - name: Upload clang-format patch as artifact
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
            name: constexpr-everything-clang_format.patch
            path: clang_format.patch

  build:
    runs-on: ubuntu-20.04
    name: Ubuntu Clang ${{ matrix.llvm-toolchain }}
    strategy:
      # fail-fast: Default is true, switch to false to allow one platform to fail and still run others
      fail-fast: false
      matrix:
        llvm-toolchain: [9, 10, 11, 12, 13, 14, 15]
    steps:
      - uses: actions/checkout@v3

      - name: deps
        shell: bash
        run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo add-apt-repository "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-${{ matrix.llvm-toolchain }} main"
          sudo apt update
          sudo apt install \
            llvm-${{ matrix.llvm-toolchain }} \
            llvm-${{ matrix.llvm-toolchain }}-dev \
            clang-${{ matrix.llvm-toolchain }} \
            libclang-${{ matrix.llvm-toolchain }}-dev

      - name: build
        shell: bash
        run: |
          mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=Debug -DLLVM_DIR:PATH=/usr/lib/llvm-${{ matrix.llvm-toolchain }}/lib/cmake/llvm \
                -DClang_DIR:PATH=/usr/lib/llvm-${{ matrix.llvm-toolchain }}/lib/cmake/clang ..
          cmake --build .

      - name: Test the binary
        working-directory: build/
        shell: bash
        run: |
          ./constexpr-everything -p . ../main.cpp

      - name: Archive binary artifacts
        uses: actions/upload-artifact@v3
        with:
            name: constexpr-everything-ubuntu-clang${{ matrix.llvm-toolchain }}
            path: build/constexpr-everything

  build-mac:
    runs-on: macos-latest
    name: MacOS Clang 15
    steps:
      - uses: actions/checkout@v3

      - name: build
        shell: bash
        run: |
          mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE:STRING=Debug -DLLVM_DIR:PATH=$(brew --prefix llvm@15)/lib/cmake/llvm \
                -DClang_DIR:PATH=$(brew --prefix llvm@15)/lib/cmake/clang ..
          cmake --build .

      - name: Test the binary
        working-directory: build/
        shell: bash
        run: |
          ./constexpr-everything -p . ../main.cpp

      - name: Archive binary artifacts
        uses: actions/upload-artifact@v3
        with:
            name: constexpr-everything-mac
            path: build/constexpr-everything
